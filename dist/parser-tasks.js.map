{"version":3,"sources":["../src/parser-tasks.js"],"names":[],"mappings":";;;;;QACW,E,GAAP,G;QACS,I,GAAT,K;QACU,K,GAAV,M;QACY,O,GAAZ,Q;QACW,M,GAAX,O;QACU,K,GAAV,M;QACY,O,GAAZ,Q;QACa,Q,GAAb,S;;;;AAIJ,SAAS,GAAT,CAAa,IAAb,EAAmB,KAAnB,EAA0B;AACtB,WAAO,KAAK,KAAL,CAAP;AACH;;;AAGD,SAAS,KAAT,CAAe,IAAf,EAAqB,KAArB,EAA4B;AACxB,WAAO,KAAK,KAAL,CAAW,KAAX,CAAP;AACH;;;;AAID,SAAS,MAAT,CAAgB,IAAhB,EAAsB,KAAtB,EAA6B;AACzB,QAAI,UAAU,MAAM,KAAN,CAAY,IAAI,MAAJ,CAAW,KAAK,CAAL,CAAX,CAAZ,CAAd;AACA,QAAI,OAAJ,EAAa;AACT,eAAO,KAAK,CAAL,MAAY,SAAZ,GAAwB,KAAxB,GAAgC,QAAQ,KAAK,CAAL,CAAR,CAAvC;AACH,KAFD,MAEO;AACH,eAAO,IAAP;AACH;AACJ;;;AAGD,SAAS,QAAT,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B;AAC3B,WAAO,KAAK,CAAL,IAAU,KAAjB;AACH;;;AAGD,SAAS,OAAT,CAAiB,IAAjB,EAAuB,KAAvB,EAA8B;AAC1B,WAAO,QAAQ,KAAK,CAAL,CAAf;AACH;;;AAGD,SAAS,MAAT,CAAgB,IAAhB,EAAsB,KAAtB,EAA6B;AACzB,WAAO,MAAM,KAAN,CAAY,KAAK,CAAL,CAAZ,CAAP;AACH;;;;;;AAMD,SAAS,QAAT,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B;AAC3B,QAAI,IAAI,KAAK,CAAL,CAAR,C;AACA,QAAI,IAAI,KAAK,CAAL,CAAR,C;AACA,QAAI,KAAK,KAAK,CAAL,CAAT,C;AACA,QAAI,OAAO,CAAP,IAAY,QAAZ,IAAwB,OAAO,CAAP,IAAY,QAAxC,EAAkD;AAC9C,YAAI,CAAE,CAAF,CAAJ;AACA,YAAI,CAAE,CAAF,CAAJ;AACH;AACD,QAAI,OAAJ;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAAE,MAAtB,EAA8B,GAA9B,EAAmC;AAC/B,kBAAU,MAAM,QAAN,GAAiB,IAAI,MAAJ,CAAW,EAAE,CAAF,CAAX,EAAiB,GAAjB,CAAjB,GAAyC,EAAE,CAAF,CAAnD;AACA,gBAAQ,MAAM,OAAN,CAAc,OAAd,EAAuB,EAAE,CAAF,CAAvB,CAAR;AACH;AACD,WAAO,KAAP;AACH;;;AAGD,SAAS,SAAT,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC;AAC5B,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,eAAO,KAAP;AACH;AACD,YAAQ,QAAQ,MAAM,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR,GAAsC,IAA9C;AACA,WAAO,QAAQ,SAAS,KAAT,EAAgB,EAAhB,CAAR,GAA8B,IAArC;AACH","file":"parser-tasks.js","sourcesContent":["export {\n    _js as js,\n    _json as json,\n    _match as match,\n    _prepend as prepend,\n    _append as append,\n    _split as split,\n    _replace as replace,\n    _parseInt as parseInt\n};\n\n// task: 'js'\nfunction _js(args, value) {\n    return eval(value);\n}\n\n// task: 'json'\nfunction _json(args, value) {\n    return JSON.parse(value);\n}\n\n// task: [ 'match', '\\\\/(\\\\w+)-(\\\\d+)' ] => returns value or null\n// task: [ 'match', '\\\\/(\\\\w+)-(\\\\d+)', 2 ] => returns matches[2] or null\nfunction _match(args, value) {\n    var matches = value.match(new RegExp(args[0]));\n    if (matches) {\n        return args[1] === undefined ? value : matches[args[1]];\n    } else {\n        return null;\n    }\n}\n\n// task: [ 'prepend',  'http://foo.bar/' ]\nfunction _prepend(args, value) {\n    return args[0] + value;\n}\n\n// task: [ 'append',  '&foo=bar' ]\nfunction _append(args, value) {\n    return value + args[0];\n}\n\n// task: [ 'split',  '&foo=bar' ]\nfunction _split(args, value) {\n    return value.split(args[0]);\n}\n\n// Replace a with b in c supporting arrays\n// task: [ 'replace',  'foo', 'bar' ]\n// task: [ 'replace',  [ 'a', 'b' ],  [ 'c', 'e' ] ]\n// task: [ 'replace',  '[\\\\r\\\\n\\\\t\\\\s]+', '', 'regexp' ]\nfunction _replace(args, value) {\n    let s = args[0]; // search for\n    let r = args[1]; // replace with\n    let re = args[2]; // optional regexp\n    if (typeof s == 'string' && typeof r == 'string') {\n        s = [ s ];\n        r = [ r ];\n    }\n    var pattern;\n    for (let i = 0; i < s.length; i++) {\n        pattern = re == 'regexp' ? new RegExp(s[i], 'g') : s[i];\n        value = value.replace(pattern, r[i]);\n    }\n    return value;\n}\n\n// task: 'parseInt'\nfunction _parseInt(args, value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    value = value ? value.replace(/[^\\d]/g, '') : null;\n    return value ? parseInt(value, 10) : null;\n}\n"]}