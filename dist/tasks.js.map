{"version":3,"sources":["../src/tasks.js"],"names":[],"mappings":"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","file":"tasks.js","sourcesContent":["import log from './log';\n\nexport default class Tasks {\n\n    static inject(tasks) {\n        for (var prop in tasks) {\n            if (this._tasks[prop]) {\n                log.warn('[parser] Overriding task: ' + prop);\n            }\n            this._tasks[prop] = tasks[prop];\n        }\n    }\n\n    // Run task(s) on value(s)\n    static run(tasks, values) {\n        // Support one or more tasks\n        // a) \"task\": \"foobar\"\n        // b) \"task\": [ \"foobar\", \"arg1\", \"arg2\" ]\n        // c) \"task\": [\n        //     [ \"foobar1\", \"arg1a\", \"arg1b\" ],\n        //     [ \"foobar2\", \"arg2a\", \"arg2b\" ]\n        //   ]\n        // Rewrite a) and b) to c)\n        if (typeof tasks == 'string') { // a\n            tasks = [ [ tasks ] ];\n        } else if (!Array.isArray(tasks[0])) { // b\n            tasks = [ tasks ];\n        }\n\n        // Support one or more values\n        if (typeof values == 'string') {\n            values = [ values ];\n        }\n\n        // Run tasks and pipe result from one to the next unless !!<result> === false\n        for (let task of tasks) {\n            let name = task[0];\n            if (!!this._tasks[name]) {\n                let args = task.slice(1);\n                let tmp = [];\n                for (let value of values) {\n                    let res = this._tasks[name](value, args);\n                    if (res) {\n                        tmp = tmp.concat(res);\n                    }\n                }\n                values = tmp;\n                if (!values.length) {\n                    break;\n                }\n            } else {\n                log.warn('[tasks] Task doesn\\'t exist: ' + name);\n            }\n        }\n\n        // No need to wrap single/empty values in an array\n        if (Array.isArray(values) && values.length <= 1) {\n            values = values.length == 1 ? values.pop() : null;\n        }\n\n        return values;\n    }\n\n\n    // Default tasks\n    static _tasks = {\n        // task: [ 'js', '((v)=>{ return \"custom\"+v;})(value)' ]\n        js: function(value, args) {\n            return eval(args[0]);\n        },\n\n        // task: 'json'\n        json: function(value, key) {\n            let data = JSON.parse(value);\n            return key ? data[key] : data;\n        },\n\n        // task: [ 'match', '\\\\/(\\\\w+)-(\\\\d+)' ] => returns value or null\n        // task: [ 'match', '\\\\/(\\\\w+)-(\\\\d+)', 2 ] => returns matches[2] or null\n        match: function(value, args) {\n            let matches = value.match(new RegExp(args[0]));\n            if (matches) {\n                return args[1] === undefined ? value : matches[args[1]];\n            } else {\n                return null;\n            }\n        },\n\n        // task: [ 'prepend',  'http://foo.bar/' ]\n        prepend: function(value, args) {\n            return args[0] + value;\n        },\n\n        // task: [ 'append',  '&foo=bar' ]\n        append: function(value, args) {\n            return value + args[0];\n        },\n\n        // task: [ 'insert',  'http://foo.com/{value}/bar' ]\n        insert: function(value, args) {\n            return args[0].replace(/\\{.+\\}/, value);\n        },\n\n        // task: [ 'split',  '&foo=bar' ]\n        split: function(value, args) {\n            return value.split(args[0]);\n        },\n\n        // Replace a with b in c supporting arrays\n        // task: [ 'replace',  'foo', 'bar' ]\n        // task: [ 'replace',  [ 'a', 'b' ],  [ 'c', 'e' ] ]\n        // task: [ 'replace',  '[\\\\r\\\\n\\\\t\\\\s]+', '', 'regexp' ]\n        replace: function(value, args) {\n            let s = args[0]; // search for\n            let r = args[1]; // replace with\n            let re = args[2]; // optional regexp\n            if (typeof s == 'string' && typeof r == 'string') {\n                s = [ s ];\n                r = [ r ];\n            }\n            var pattern;\n            for (let i = 0; i < s.length; i++) {\n                pattern = re == 'regexp' ? new RegExp(s[i], 'g') : s[i];\n                value = value.replace(pattern, r[i]);\n            }\n            return value;\n        },\n\n        // task: 'parseInt'\n        parseInt: function(value) {\n            if (typeof value === 'number') {\n                return value;\n            }\n            value = value ? value.replace(/[^\\d]/g, '') : null;\n            return value ? parseInt(value, 10) : null;\n        },\n\n        // task: 'urldecode'\n        urldecode: function(value) {\n            return decodeURIComponent(value);\n        }\n    }\n\n}\n"]}