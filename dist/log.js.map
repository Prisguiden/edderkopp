{"version":3,"sources":["../src/log.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA,kBAAQ,QAAR,GAAmB,IAAnB;;IAEM,G;AAIF,mBAAc;AAAA;;AAAA,aAFd,MAEc,GAFL,MAEK;;AACV,aAAK,GAAL,GAAW,IAAI,kBAAQ,MAAZ,CAAmB;AAC1B,wBAAY,CACR,IAAI,kBAAQ,UAAR,CAAmB,OAAvB,CAA+B;AAC3B,uBAAO,KAAK,MADe;AAE3B,kCAAkB,KAFS;AAG3B,sBAAM,KAHqB;AAI3B,6BAAa,IAJc;AAK3B,0BAAU;AALiB,aAA/B,CADQ,CADc;AAU1B,yBAAa;AAVa,SAAnB,CAAX;AAYA,aAAK,SAAL,GAAiB,KAAK,GAAL,CAAS,UAAT,CAAoB,OAArC;AACH;;;;;;;8BAoCK,G,EAAK;AAAE,iBAAK,GAAL,CAAS,KAAT,CAAe,GAAf;AAAsB;;;8BAC7B,G,EAAK;AAAE,iBAAK,GAAL,CAAS,KAAT,CAAe,GAAf;AAAsB;;;gCAC3B,G,EAAK;AAAE,iBAAK,GAAL,CAAS,OAAT,CAAiB,GAAjB;AAAwB;;;6BAClC,G,EAAK;AAAE,iBAAK,GAAL,CAAS,IAAT,CAAc,GAAd;AAAqB;;;6BAC5B,G,EAAK;AAAE,iBAAK,GAAL,CAAS,IAAT,CAAc,GAAd;AAAqB;;;8BAC3B,G,EAAK;AAAE,iBAAK,GAAL,CAAS,KAAT,CAAe,GAAf;AAAsB;;;0BAvC1B,Q,EAAU;AACf,iBAAK,GAAL,GAAW,IAAI,kBAAQ,MAAZ,CAAmB;AAC1B,4BAAY,CACR,IAAI,kBAAQ,UAAR,CAAmB,IAAvB,CAA4B;AACxB,2BAAO,KAAK,MADY;AAExB,sCAFwB;AAGxB,mCAAe,IAHS;AAIxB,8BAAW,IAJa;AAKxB,sCAAkB,KALM;AAMxB,0BAAM,KANkB;AAOxB,6BAAS,OAPe,E;AAQxB,8BAAU;AARc,iBAA5B,CADQ,CADc;AAa1B,6BAAa;AAba,aAAnB,CAAX;AAeA,iBAAK,SAAL,GAAiB,KAAK,GAAL,CAAS,UAAT,CAAoB,IAArC;AACH;;;;;;;;;;;;;;0BAWS,K,EAAO;AACb,iBAAK,MAAL,GAAc,KAAd;AACA,iBAAK,SAAL,CAAe,KAAf,GAAuB,KAAvB;AACH;;;;;;AAWL,IAAM,MAAM,IAAI,GAAJ,EAAZ;kBACe,G","file":"log.js","sourcesContent":["import winston from 'winston';\n\nwinston.emitErrs = true;\n\nclass Log {\n\n    _level = 'info';\n\n    constructor() {\n        this.log = new winston.Logger({\n            transports: [\n                new winston.transports.Console({\n                    level: this._level,\n                    handleExceptions: false,\n                    json: false,\n                    prettyPrint: true,\n                    colorize: true\n                })\n            ],\n            exitOnError: false\n        });\n        this._settings = this.log.transports.console;\n    }\n\n    set file(filename) {\n        this.log = new winston.Logger({\n            transports: [\n                new winston.transports.File({\n                    level: this._level,\n                    filename,\n                    zippedArchive: true,\n                    tailable : true,\n                    handleExceptions: false,\n                    json: false,\n                    maxsize: 5242880, // 5MB\n                    maxFiles: 5\n                })\n            ],\n            exitOnError: false\n        });\n        this._settings = this.log.transports.file;\n    }\n\n    /**\n     * Config levels:\n     *   silly: 0,\n     *   debug: 1,\n     *   verbose: 2,\n     *   info: 3,\n     *   warn: 4,\n     *   error: 5\n     */\n    set level(level) {\n        this._level = level;\n        this._settings.level = level;\n    }\n\n    // Mapping methods to winston\n    silly(msg) { this.log.silly(msg); }\n    debug(msg) { this.log.debug(msg); }\n    verbose(msg) { this.log.verbose(msg); }\n    info(msg) { this.log.info(msg); }\n    warn(msg) { this.log.warn(msg); }\n    error(msg) { this.log.error(msg); }\n}\n\nconst log = new Log();\nexport default log;\n"]}