{"version":3,"sources":["../src/config.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA;;;;AACA;;;;;;;;;;;kBAEe,EAAE,QAAF,EAAO,QAAP,E;;;AAEf,IAAI,OAAO,QAAQ,GAAR,CAAY,eAAZ,IAA+B,QAAQ,GAAR,KAAgB,SAA1D;AACA,IAAI,eAAJ,C;;AAEA,SAAS,GAAT,CAAa,GAAb,EAAkB;AACd,WAAO,GAAP;AACH;;AAED,SAAS,GAAT,CAAa,GAAb,EAAkB;AACd,QAAI,yBAAiB,GAAjB,CAAJ,EAA2B;AACvB,eAAO,SAAS,GAAT,CAAP;AACH,KAFD,MAEO,IAAI,IAAI,OAAJ,CAAY,MAAZ,MAAwB,CAAC,CAA7B,EAAgC;AACnC,eAAO,UAAU,GAAV,CAAP;AACH,KAFM,MAEA,IAAI,gBAAgB,IAAhB,CAAqB,GAArB,CAAJ,EAA+B;AAClC,eAAO,OAAO,OAAO,GAAP,GAAa,GAApB,CAAP;AACH,KAFM,MAEA;AACH,eAAO,OAAO,GAAP,CAAP;AACH;AACJ;;;AAGD,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,QAAI,QAAQ,EAAZ;AADoB;AAAA;AAAA;;AAAA;AAEpB,wDAAiB,aAAG,WAAH,CAAe,GAAf,CAAjB,4GAAsC;AAAA,gBAA7B,IAA6B;;AAClC,gBAAI,aAAG,QAAH,CAAY,MAAM,GAAN,GAAY,IAAxB,EAA8B,WAA9B,EAAJ,EAAiD;AAC7C,wBAAQ,MAAM,MAAN,CAAa,UAAU,MAAM,GAAN,GAAY,IAAtB,CAAb,CAAR;AACH,aAFD,MAEO;AACH,sBAAM,IAAN,CAAW,MAAM,GAAN,GAAY,IAAvB;AACH;AACJ;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQnB;AACD,WAAO,KAAP;AACH;;AAED,SAAS,QAAT,CAAkB,EAAlB,EAAsB;AAClB,aAAS,UAAU,UAAU,IAAV,CAAnB;AADkB;AAAA;AAAA;;AAAA;AAElB,yDAAiB,MAAjB,iHAAyB;AAAA,gBAAhB,IAAgB;;AACrB,gBAAI,QAAQ,KAAK,KAAL,CAAW,UAAX,CAAZ;AACA,gBAAI,SAAS,MAAM,CAAN,KAAY,EAAzB,EAA6B;AACzB,uBAAO,OAAO,IAAP,CAAP;AACH;AACJ;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQlB,WAAO,KAAP;AACH;;AAED,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,aAAS,UAAU,UAAU,IAAV,CAAnB;AACA,QAAI,WAAW,cAAE,KAAF,CAAQ,GAAR,EAAa,QAA5B;AAFoB;AAAA;AAAA;;AAAA;AAGpB,yDAAiB,MAAjB,iHAAyB;AAAA,gBAAhB,IAAgB;;AACrB,gBAAI,SAAS,OAAO,IAAP,CAAb;AACA,gBAAI,YAAY,cAAE,KAAF,CAAQ,OAAO,GAAP,CAAW,KAAnB,EAA0B,QAA1C,EAAoD;AAChD,uBAAO,MAAP;AACH;AACJ;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASpB,WAAO,KAAP;AACH;;AAED,SAAS,MAAT,CAAgB,IAAhB,EAAsB;AAClB,QAAI,QAAQ,KAAK,KAAL,CAAW,cAAX,CAAZ;AACA,QAAI,MAAM,CAAN,KAAY,MAAhB,EAAwB;AACpB,eAAO,KAAK,KAAL,CAAW,aAAG,YAAH,CAAgB,IAAhB,EAAsB,QAAtB,EAAX,CAAP;AACH,KAFD,MAEO,IAAI,MAAM,CAAN,KAAY,IAAhB,EAAsB;AACzB,eAAO,QAAQ,IAAR,CAAP;AACH;AACJ","file":"config.js","sourcesContent":["/**\n * Also can use:\n * https://github.com/lorenwest/node-config\n */\n\nimport fs from 'fs';\nimport u from 'url';\n\nexport default { get, dir };\n\nlet _dir = process.env.NODE_CONFIG_DIR || process.cwd() + '/config';\nlet _files; // cache\n\nfunction dir(dir) {\n    _dir = dir;\n}\n\nfunction get(arg) {\n    if (Number.isInteger(arg)) {\n        return _getById(arg);\n    } else if (arg.indexOf('http') !== -1) {\n        return _getByUrl(arg);\n    } else if (/^[^/]+\\.json$/.test(arg)) {\n        return _parse(_dir + '/' + arg);\n    } else {\n        return _parse(arg);\n    }\n}\n\n// Recursivly find all files\nfunction _getFiles(dir) {\n    var files = [];\n    for (let file of fs.readdirSync(dir)) {\n        if (fs.statSync(dir + '/' + file).isDirectory()) {\n            files = files.concat(_getFiles(dir + '/' + file));\n        } else {\n            files.push(dir + '/' + file);\n        }\n    };\n    return files;\n}\n\nfunction _getById(id) {\n    _files = _files || _getFiles(_dir);\n    for (let file of _files) {\n        let match = file.match(/-(\\d+)\\./);\n        if (match && match[1] == id) {\n            return _parse(file);\n        }\n    }\n    return false;\n}\n\nfunction _getByUrl(url) {\n    _files = _files || _getFiles(_dir);\n    let hostname = u.parse(url).hostname;\n    for (let file of _files) {\n        let config = _parse(file);\n        if (hostname == u.parse(config.url.entry).hostname) {\n            return config;\n        }\n    }\n    return false;\n}\n\nfunction _parse(file) {\n    var match = file.match(/.*\\.([^.]*)$/);\n    if (match[1] == 'json') {\n        return JSON.parse(fs.readFileSync(file).toString());\n    } else if (match[1] == 'js') {\n        return require(file);\n    }\n}\n"]}