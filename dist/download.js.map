{"version":3,"sources":["../src/download.js"],"names":[],"mappings":";;;;;;kBAEe,UAAS,GAAT,EAAc,OAAd,EAAuB;AAClC,QAAI,OAAJ,EAAa;AACT,YAAI,QAAQ,OAAZ,EAAqB;AACjB,gBAAI,IAAI,kBAAQ,GAAR,EAAR;AADiB;AAAA;AAAA;;AAAA;AAEjB,qCAAmB,QAAQ,OAA3B,8HAAoC;AAAA,wBAA3B,MAA2B;;AAChC,sBAAE,SAAF,CAAY,MAAZ,EAAoB,GAApB;AACH;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKjB,oBAAQ,GAAR,GAAc,CAAd;AACA,mBAAO,QAAQ,OAAf;AACH;AACD,YAAI,QAAQ,OAAZ,EAAqB;AACjB,oBAAQ,OAAR,IAAmB,IAAnB;AACH;AACJ;;AAED,QAAM,KAAK,QAAQ,MAAR,EAAX;AACA,cAAU,OAAO,MAAP,CAAc;AACpB,aAAK,GADe;AAEpB,iBAAS;AACL,0BAAc;AADT,SAFW;AAKpB,cAAM,IALc;AAMpB,iBAAS;AANW,KAAd,EAOP,OAPO,CAAV;AAQA,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,+BAAQ,OAAR,EAAiB,UAAU,KAAV,EAAiB,QAAjB,EAA2B,IAA3B,EAAiC;AAC9C,gBAAI,UAAU,IAAd,EAAoB;AAChB,uBAAO,KAAP;AACH,aAFD,MAEO,IAAI,SAAS,UAAT,KAAwB,GAA5B,EAAiC;AACpC,uBAAO,2BAA2B,SAAS,UAA3C;AACH,aAFM,MAEA,IAAI,IAAJ,EAAS;AACZ,oBAAI,OAAO,QAAQ,MAAR,CAAe,EAAf,CAAX;AACA,wBAAQ;AACJ,8BADI;AAEJ,6BAAS,SAAS,OAFd;AAGJ,0BAAM,CAAC,KAAK,CAAL,IAAU,KAAK,CAAL,IAAU,IAArB,EAA2B,OAA3B,CAAmC,CAAnC,IAAwC,IAH1C;AAIJ,0BAAM,CAAC,SAAS,MAAT,CAAgB,SAAhB,GAA4B,IAA7B,EAAmC,OAAnC,CAA2C,CAA3C,IAAgD,KAJlD;AAKJ,0BAAM,SAAS,OAAT,CAAiB,kBAAjB,KAAwC,MAAxC,GAAiD,IAAjD,GAAwD;AAL1D,iBAAR;AAOH,aATM,MASA;AACH,uBAAO,wBAAP;AACH;AACJ,SAjBD;AAkBH,KAnBM,CAAP;AAoBH,C;;AA9CD","file":"download.js","sourcesContent":["import request from \"request\";\n\nexport default function(url, options) {\n    if (options) {\n        if (options.cookies) {\n            let j = request.jar()\n            for (let cookie of options.cookies) {\n                j.setCookie(cookie, url);\n            }\n            options.jar = j;\n            delete options.cookies;\n        }\n        if (options.timeout) {\n            options.timeout *= 1000;\n        }\n    }\n\n    const t0 = process.hrtime();\n    options = Object.assign({\n        url: url,\n        headers: {\n            'User-Agent': USER_AGENT\n        },\n        gzip: true,\n        timeout: 60000\n    }, options);\n    return new Promise(function (fulfill, reject) {\n        request(options, function (error, response, html) {\n            if (error !== null) {\n                reject(error);\n            } else if (response.statusCode !== 200) {\n                reject('Error! Response code: ' + response.statusCode);\n            } else if (html){\n                var diff = process.hrtime(t0);\n                fulfill({\n                    html,\n                    headers: response.headers,\n                    time: (diff[0] + diff[1] * 1e-9).toFixed(2) + ' s',\n                    size: (response.socket.bytesRead / 1024).toFixed(2) + ' KB',\n                    gzip: response.headers['content-encoding'] == 'gzip' ? true : false\n                });\n            } else {\n                reject('This should not happen');\n            }\n        });\n    });\n}\n"]}