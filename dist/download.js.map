{"version":3,"sources":["../src/download.js"],"names":[],"mappings":"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","file":"download.js","sourcesContent":["import request from \"request\";\n\nexport default class Download {\n\n    _timeout = 60000;\n    _cache = false;\n    _delay = [ 2, 5 ]; // delay 2-5 sec (simulate a user)\n    _force = false;\n    _followRedirect = true;\n\n    constructor(options) {\n        if (options.timeout !== undefined) { this._timeout = options.timeout; }\n        if (options.delay !== undefined) { this._delay = options.delay; }\n        if (options.cache !== undefined) { this._cache = options.cache; }\n        if (options.force !== undefined) { this._force = options.force; }\n        if (options.followRedirect !== undefined) { this._followRedirect = options.followRedirect; }\n    }\n\n    get(url, cookies) {\n        if (cookies) {\n            this._jar = request.jar()\n            for (let cookie of cookies) {\n                this._jar.setCookie(cookie, url);\n            }\n        }\n\n        // Get from cache or download it?\n        if (this._cache && !this._force && this._cache.has(url)) {\n            let res = {\n                content: this._cache.get(url),\n                cached: true\n            }\n            return Promise.resolve(res);\n        } else {\n            return (async () => {\n                let delay = 0;\n                if (this._useDelay) {\n                    delay = !Array.isArray(this._delay) ? this._delay : this._delay[0] + (this._delay[1] - this._delay[0]) * Math.random();\n                    await new Promise(resolve => setTimeout(resolve, delay * 1000));\n                } else {\n                    // Don't delay first download\n                    this._useDelay = true;\n                }\n\n                // Prepare options for request\n                let options = {\n                    url: url,\n                    headers: {\n                        'User-Agent': USER_AGENT\n                    },\n                    followRedirect: this._followRedirect,\n                    gzip: true,\n                    timeout: this._timeout\n                };\n                if (this._jar) {\n                    options.jar = this._jar;\n                }\n                let res = await this._download(options);\n                res.delay = delay;\n                return res;\n            })();\n        }\n    }\n\n    _download(options) {\n        return new Promise((resolve, reject) => {\n            const t0 = process.hrtime();\n            request(options, (error, response, content) => {\n                if (error !== null) {\n                    reject(error);\n                }\n                // Note: the strange 301|302 condition is for the very weird case where a site returns a 301|302\n                // with the correct content! Then we don't want to follow redirect, just return the body.\n                else if (response.statusCode === 200 || /30[12]/.test(response.statusCode) && !this._followRedirect) {\n                    // Debug info\n                    let diff = process.hrtime(t0);\n                    let time = diff[0] + diff[1] * 1e-9;\n\n                    if (this._cache) { this._cache.set(options.url, content); }\n                    resolve({ statusCode: response.statusCode, headers: response.headers, content, time });\n                } else {\n                    reject('Response code: ' + response.statusCode);\n                }\n            });\n        });\n\n    }\n}\n"]}